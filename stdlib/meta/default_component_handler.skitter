## Copyright 2018, 2019 Mathijs Saey, Vrije Universiteit Brussel

# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

defhandler DefaultComponentHandler do
  on_define c do
    c
    |> default_callback(:init, defcallback([], [], [], do: nil))
    |> default_callback(:terminate, defcallback([], [], [], do: nil))
    |> require_callback(:init, state_capability: :readwrite)
    |> require_callback(:terminate, state_capability: :read)
    |> require_callback(:react, arity: length(c.in_ports), state_capability: :read, publish_capability: true)
    ~> elem
  end

  deploy %Prototype{elem: comp, args: args} do
    put_ubiquitous(fn ->
      state = Component.call(comp, :init, create_empty_state(comp), args).state
      {comp, state}
    end) ~> reference
  end

  react ref, args do
    {comp, state} = get_ubiquitous(ref)
    Component.call(comp, :react, state, args).publish ~> publish
  end
end
