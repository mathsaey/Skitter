# Copyright 2018, 2019 Mathijs Saey, Vrije Universiteit Brussel

# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

defhandler DefaultComponentHandler do
  on_define c do
    c
    |> default_callback(:init, defcallback([], [], [], do: nil))
    |> default_callback(:terminate, defcallback([], [], [], do: nil))
    |> require_callback(:init, state_capability: :readwrite)
    |> require_callback(:terminate, state_capability: :read)
    |> require_callback(
      :react,
      arity: length(c.in_ports),
      state_capability: :read,
      publish_capability: true
    ) ~> component
  end

  on_embed comp, args do
    require_instantiation_arity(comp, args, comp.callbacks.init.arity)
    comp ~> component
    args ~> arguments
  end

  deploy comp, args do
    res = Component.call(comp, :init, create_empty_state(comp), args)
    %Instance{component: comp, state_ref: res.state} ~> reference
  end

  react inst, args do
    %Instance{component: comp, state_ref: state} = inst
    Component.call(comp, :react, state, args)
  end
end
